<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>