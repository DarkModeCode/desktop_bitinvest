<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picUser.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEIAAAA9CAYAAAAZIL/8AAAABGdBTUEAALGPC/xhBQAAA6pJREFUeF7t
        W01rE0EYXhVR8OOgbbOzor/Am1/XnsSLn3iweNCjePIkPfbupZlN0B6k6cmgIHooFKRgoaKIqKcePBUE
        9Wg9bDahMj5v8oY2yZs2aT66O+MDD2QzX88zmd2deTPjDQOVUJ2NwuBhpIOwFAbPSjp4g+svuP6O6xKR
        PtN3lEZ5KC+VqWTVGa4mfTAzwQiMTJRCNRdp9QvGTC/kOgpRLrhFdXMzyUVZqxv4Rd81G+k70UY5DK5x
        s8mAmfL2lrV/E8P4qyh6gKRbqZxT10kDyxk+zHNvX0mr2xj+K5LI4VKt0K049A4x02MZdMJbWdSuctHk
        R32WOVhU8v65KFQ/BRGJIEbGj0ouc4HlDgZx6N/Hg6osCUgUoTEO1T2W3T+YWe8gXmEvxEaTzSJpZxu9
        wWjvACpcbGogPcQErefOMMbbg1fUa7GBFBHPtJfkhW11D1QwLVWcRpIXttUdYq0eSBWmmeSJ7XWG6kRJ
        q79SZakmPHU8NY/ywUk8YGKxIhuo1VppOjjFdtsDmYsthe1jke3KqGj/vFDISm45+8ST9YNUyEZiKv6e
        bTeCgh5SAZtJntn+BrCUXZAy2021wPZrMI8zY0iotGa0nFicNSzbaaUmZnSADatUN2+LOvn2cPa2qJNu
        j6cjRzAa/HExg1P0x7Gu8O/KiQ4RfUBT6qmWBPc4RR1RaPrSRRZoyZ3EsPxwiT6gV+eqmOgU1SpGhMWx
        h06JPvg/IqrEiHBp6d2O1AdepNUrKdElUh9YFbLfKauhfnyYbE5wkJNenFWXhASnSH3gmRlvPy5+Nyc6
        Q63WqA+qS3F84UIIvx03QvsuBm7rbAjgGn3sKAUopIxWsx6U2QwKWYmZrWZTFJvgYgC37fYi+vdHKmAj
        MZv8yLZbQf8HYrisSwXtolqn/eFsWwbeq0/kwhYRHtlue9Cmb5pkiBXYQK3+mNyJ42x3a6CAzeuPSba5
        Par7rO2cbRbJG9vsDLXOUPNCZSmlmu+6E+qobTZVS3LFaaJaIi9sa2cwjzKH8M79JDeQBqIT4IHt9Aba
        wot5+azcUIIJzX3bi70ZpZx/B5VHYqNJImmEVpY9GJSzmdNo6JsoIAmENtLIcgcLkx89nMRjC6SJtLHM
        4SHWmctYqH2WRA2TtFiMdXCRZe0OaPv/bnUItRmHwRWWkhyQKAhcbhY8AC6Xs8FVbja5qJ4ErsVBC7hv
        +3QSmE4VBxOpOAncDnS+m855w0j3Z8O3ixv0BZ73D8OrFZUARU8vAAAAAElFTkSuQmCC
</value>
  </data>
</root>